#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gomicro/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

converged_config = converge( Hooky::Memcached::CONFIG_DEFAULTS, payload[:config] || {} )

if payload[:platform] == 'local'
  maxmemory = 128
else
  total_mem = `vmstat -s | grep 'total memory' | awk '{print $1}'`.to_i
  cgroup_mem = `cat /sys/fs/cgroup/memory/memory.limit_in_bytes`.to_i
  maxmemory = [ total_mem / 1024, cgroup_mem / 1024 / 1024 ].min
end

# Import service (and start)
directory '/etc/service/cache' do
  recursive true
end

directory '/etc/service/cache/log' do
  recursive true
end

template '/etc/service/cache/log/run' do
  mode 0755
  source 'log-run.erb'
  variables ({ svc: "cache" })
end

mem_exec = "/data/bin/memcached \
-m #{maxmemory} \
-c #{converged_config[:max_connections]} \
-f #{converged_config[:chunk_size_growth_factor]} \
-n #{converged_config[:minimum_allocated_space]} \
-R #{converged_config[:maximum_requests_per_event]} \
-b #{converged_config[:max_backlog]} \
-B #{converged_config[:binding_protocol]} \
-I #{converged_config[:max_item_size]} \
   #{converged_config[:return_error_on_memory_exhausted] ? '-M' : ''} \
   #{converged_config[:disable_cas] ? '-C' : ''}"

template '/etc/service/cache/run' do
  mode 0755
  variables ({ exec: mem_exec })
end

service 'cache' do
  action :enable
  init :runit
end

ensure_socket 'cache' do
  port '11211'
  action :listening
end

# Attach the IP if provided
if payload[:ips]
  # set up persistance
  file "/etc/microinit.d/eth00" do
    content <<-EOF
#!/bin/bash
case $1 in
  start)
    if [[ ! $(ifconfig) =~ eth0:0 ]]; then
      ifconfig eth0:0 #{payload[:ips][:default]}
      arping -A -c 10 -I eth0 #{payload[:ips][:default]}
    fi
    ;;
  stop)
    if [[ $(ifconfig) =~ eth0:0 ]]; then
      ifconfig eth0:0 down
    fi
    ;;
  *)
    echo "$0 start|stop"
    exit 1
    ;;
esac
EOF
    mode 0755
  end

  # bring up interface
  execute "bring up vip" do
    command <<-EOF
      /etc/microinit.d/eth00 start
    EOF
  end
end

if Dir.exist? "/opt/microbox/cron"
  directory '/etc/service/cron'

  hook_file '/etc/service/cron/run' do
    source 'cron'
    mode 0755
  end

  service 'cron' do
    action :enable
    only_if { File.exist?('/etc/service/cron/run') }
  end
end
